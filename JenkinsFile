pipeline {
    agent any

    tools {
        jdk 'jdk-17'
        maven 'maven-3'
    }

    stages {
        stage('Clean') {
            when {
                not {
                    changelog '.*^\\[ci skip\\] .+$'
                }
            }
            steps {
                cleanWs()
            }
        }

        stage('Checkout') {
            when {
                not {
                    changelog '.*^\\[ci skip\\] .+$'
                }
            }
            steps {
                git branch: 'main', url: 'https://github.com/spring-projects/spring-petclinic.git'
            }
        }

        stage('Build') {
            when {
                not {
                    changelog '.*^\\[ci skip\\] .+$'
                }
            }
            steps {
                sh 'mvn clean verify'
            }
        }
    }

    post {
        always {
            notify(":heart_eyes: build *${env.$BUILD_TAG}* has ended (<${env.BUILD_URL}|Open>)")
            junit allowEmptyResults: true, testResults: '**/target/**/TEST-*.xml'
        }
    }
}

def notify(def color = 'good', def message) {
    slackSend(
            channel: 'pawelsi-jenkins',
            color: color,
            message: message,
            tokenCredentialId: 'slack-token',
            username: 'Jenkins-Backend'
    )
}
